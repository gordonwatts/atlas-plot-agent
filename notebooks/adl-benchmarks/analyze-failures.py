import typer
import yaml
from typing import List

app = typer.Typer()

prompt = """
You will be given some python code that was generated by an LLM, the question
that triggered the code generation, along with an error message or
traceback from running that code. Included are the hint files that told the original
LLM how to write and structure the code.

Your task is to:
1. Understand which phase the error occurred in: servicex, awkward, hist, or vector.
1. Write a one line description of what the error was
1. Determine if this was a policy error (e.g. there will be a note in the
stderr output to that effect)
1. And determine if the code does not follow instructions in the hint files (the alternative
is not using servicex or award correctly)

** Hints **
{hints}

** Question that generated the code **
{question}

** Previous Code **
```python
{old_code}
```

** stdout **

```text
{stdout}
```

** stderr **
```text
{stderr}
```

** Final Instruction **
Please write your reply in this form (yaml). If you find more than one error,
add more than one entry:
>>start-reply<<
- phase: "<phase>"
  error_description: "<error_description>"
  policy_error: <True/False>
  hint_violation: <True/False>
>>end-reply<<
"""


def analysis(question: str, code: str, stderr: str, stdout: str) -> List[dict]:
    full_prompt = prompt.format(
        {
            "hints": "",
            "old_code": code,
            "stderr": stderr,
            "stdout": stdout,
            "question": question,
        }
    )


@app.command()
def analyze(files: List[str]):
    """Analyze a list of failure YAML files."""
    for file_path in files:
        with open(file_path, "r", encoding="utf-8") as f:
            data = yaml.safe_load(f)
        code = data.get("code", "")
        stderr = data.get("stderr", "")
        stdout = data.get("stdout", "")
        question = data.get("question", "")
        result = analysis(question, code, stderr, stdout)
        typer.echo(f"Analysis for {file_path}: {result}")


if __name__ == "__main__":
    app()
